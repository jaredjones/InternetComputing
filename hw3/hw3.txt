HW 3. Due 11:59PM July 24th

Mention a few JavaScript engines available today. Discuss their key strengths and limitations.

V8 is Google’s open source JavaScript engine for Chrome written in C++. It can run standalone or easily be embedded into any C++ application. Some cool key features are that it can automatically compile and execute javascript source code, handle memory allocations for objects, and that it garbage collects objects that are no longer needed. Also its ability to be integrated into server-side JavaScript in Node.js One limitation of V8 is it’s 1.4GB heap limit in Node.js. 

Another engine is Duktape. This embeddable javascript engine is more focused on portability and a smaller foot print than performance. It can be easily integrated into any C/C++ project. Duktape can run on platforms with 256kB flash, includes a built-in debugger, and built-in regular expression engine with no platform dependencies. A couple limitations are that only one C/C++ thread can call Duktape API’s at a time for a particular Duktape heap. There are also known String, buffer, and array limits at 2*31-1(0x7fffffff) bytes.

Another interesting engine is SpiderMonkey, originally developed by Netscape. This engine is more modernly found in Mozilla's Firefox browser. SpiderMonkey unlike V8, uses a tracing JIT when it is compiling code. This works by compiling the JS into bytecode, and then it is interpretted after it has been optimized. The engine also looks for things called "hot spots" such as loops, once one of these hot-spots has been detected, it is then able to compile straight into machine code the performance critical segments. This is both a major benefit and a drawback at the same time. This method is slow in that the JITing takes time on a first time page load, however it becomes super fast under critical hot spot sections. Another major drawback is that SpiderMonkey does not efficiently take into effect branch predictions; since the interpretter is more optimized for single code execution.

Nashorn is a JavaScript engine developed entirely in the JVM by Oracle and provided by Mozilla Firefox. It has known limitations with HTML5 canvas, HTML5 audio, WebWorkers, and Websockets. It also does not include a debugger or a browser plug-in API, you will need to download netbeans 8 to support debugging for Nashorn. It’s features include the ability to call javascript directly from a Java8 program, calling java from javascript, and a nice command line interface with tools to support it.

Total[10]: 10